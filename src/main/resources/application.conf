
osmcluster {

	
	
	pdisp {
	 	  type = PinnedDispatcher
		  executor = "thread-pool-executor"
		 
	}
	
	
	
	


	

	 akka {
	 
	   # loggers = ["akka.event.slf4j.Slf4jLogger"]
 
		  # Log level used by the configured loggers (see "loggers") as soon
		  # as they have been started; before that, see "stdout-loglevel"
		  # Options: OFF, ERROR, WARNING, INFO, DEBUG
		  loglevel = "INFO"
		 
		  # Log level for the very basic logger activated during ActorSystem startup.
		  # This logger prints the log messages to stdout (System.out).
		  # Options: OFF, ERROR, WARNING, INFO, DEBUG
		  stdout-loglevel = "INFO"
		  log-dead-letters = 10
		  log-dead-letters-during-shutdown = on 

		
	   actor   {
 	   
 	   
		 	    # This will be used if you have set "executor = "default-executor"".
		      # If an ActorSystem is created with a given ExecutionContext, this
		      # ExecutionContext will be used as the default executor for all
		      # dispatchers in the ActorSystem configured with
		      # executor = "default-executor". Note that "default-executor"
		      # is the default value for executor, and therefore used if not
		      # specified otherwise. If no ExecutionContext is given,
		      # the executor configured in "fallback" will be used.
		      default-executor {
		        executor = "fork-join-executor"
		      }
		 
		      # This will be used if you have set "executor = "fork-join-executor""
		      fork-join-executor {
		        # Min number of threads to cap factor-based parallelism number to
		        parallelism-min = 8
		 
		        # The parallelism factor is used to determine thread pool size using the
		        # following formula: ceil(available processors * factor). Resulting size
		        # is then bounded by the parallelism-min and parallelism-max values.
		        parallelism-factor = 3.0
		 
		        # Max number of threads to cap factor-based parallelism number to
		        parallelism-max = 64
		        
		         throughput = 10
		      }
		      
      
      
 	   	
 	   		default-dispatcher {
 	   			  # Dispatcher is the name of the event-based dispatcher
				  type = Dispatcher
				  # What kind of ExecutionService to use
				  executor = "fork-join-executor"
 	   			  mailbox-type="akka.dispatch.UnboundedControlAwareMailbox"
 	   		}
 	   
 	  
			default-mailbox {
				mailbox-type="akka.dispatch.UnboundedControlAwareMailbox"
			
			}
		
		
			deployment {
			
				
				
			}
			
			
	  	   
	 	}
	}



}

